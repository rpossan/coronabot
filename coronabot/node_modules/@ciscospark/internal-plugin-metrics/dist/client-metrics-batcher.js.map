{"version":3,"sources":["client-metrics-batcher.js"],"names":["ClientMetricsBatcher","Batcher","extend","namespace","prepareItem","item","resolve","prepareRequest","queue","submitHttpRequest","payload","spark","request","method","service","resource","body","metrics"],"mappings":";;;;;;;;;;AAIA;;;;;;AAEA,IAAMA,uBAAuBC,kBAAQC,MAAR,CAAe;AAC1CC,aAAW,SAD+B;;AAG1CC,aAH0C,uBAG9BC,IAH8B,EAGxB;AAChB;AACA,WAAO,kBAAQC,OAAR,CAAgBD,IAAhB,CAAP;AACD,GANyC;AAQ1CE,gBAR0C,0BAQ3BC,KAR2B,EAQpB;AACpB,WAAO,kBAAQF,OAAR,CAAgBE,KAAhB,CAAP;AACD,GAVyC;AAY1CC,mBAZ0C,6BAYxBC,OAZwB,EAYf;AACzB,WAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmB;AACxBC,cAAQ,MADgB;AAExBC,eAAS,SAFe;AAGxBC,gBAAU,eAHc;AAIxBC,YAAM;AACJC,iBAASP;AADL;AAJkB,KAAnB,CAAP;AAQD;AArByC,CAAf,CAA7B,C,CANA;;;;kBA+BeV,oB","file":"client-metrics-batcher.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport Batcher from './batcher';\n\nconst ClientMetricsBatcher = Batcher.extend({\n  namespace: 'Metrics',\n\n  prepareItem(item) {\n    // Add more defaults to payload when the clientmetrics endpoint evolves to support richer payloads\n    return Promise.resolve(item);\n  },\n\n  prepareRequest(queue) {\n    return Promise.resolve(queue);\n  },\n\n  submitHttpRequest(payload) {\n    return this.spark.request({\n      method: 'POST',\n      service: 'metrics',\n      resource: 'clientmetrics',\n      body: {\n        metrics: payload\n      }\n    });\n  }\n\n});\n\nexport default ClientMetricsBatcher;\n"]}