{"version":3,"sources":["embargo.js"],"names":["EmbargoInterceptor","options","reason","statusCode","spark","internal","device","clear","credentials","logger","info","reject","Interceptor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;AAEA;;;IAGqBA,kB;;;;;;;;;;;;AASnB;;;;;;oCAMgBC,O,EAASC,M,EAAQ;AAC/B,UAAIA,OAAOC,UAAP,KAAsB,GAA1B,EAA+B;AAC7B,aAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,KAA3B;AACA,aAAKH,KAAL,CAAWI,WAAX,CAAuBD,KAAvB;AACA,aAAKH,KAAL,CAAWK,MAAX,CAAkBC,IAAlB,CAAuB,mGAAvB;AACD;;AAED,aAAO,kBAAQC,MAAR,CAAeT,MAAf,CAAP;AACD;;;;AAtBD;;;6BAGgB;AACd;AACA,aAAO,IAAIF,kBAAJ,CAAuB,EAACI,OAAO,IAAR,EAAvB,CAAP;AACD;;;EAP6CQ,qB,GAThD;;;;kBASqBZ,kB","file":"embargo.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@ciscospark/http-core';\n\n/**\n * @class\n */\nexport default class EmbargoInterceptor extends Interceptor {\n  /**\n   * @returns {EmbargoInterceptor}\n   */\n  static create() {\n    /* eslint no-invalid-this: [0] */\n    return new EmbargoInterceptor({spark: this});\n  }\n\n  /**\n   * @see Interceptor#onResponseError\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Promise}\n   */\n  onResponseError(options, reason) {\n    if (reason.statusCode === 451) {\n      this.spark.internal.device.clear();\n      this.spark.credentials.clear();\n      this.spark.logger.info('Received `HTTP 451 Unavailable For Legal Reasons`, discarding credentials and device registration');\n    }\n\n    return Promise.reject(reason);\n  }\n}\n"]}