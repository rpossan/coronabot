{"version":3,"sources":["spark-core-plugin-mixin.js"],"names":["mixinSparkCorePlugins","State","config","interceptors","registerPlugin","name","constructor","options","prototype","_children","replace","proxies","forEach","key","createDerivedProperty","deps","fn","payloadTransformer","predicates","concat","transforms","onBeforeLogout","push","plugin","_definition","ready","_derived","depList","def","modelProto","definition","cache","dep","_deps","get","_getDerivedProperty","set","TypeError"],"mappings":"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","file":"spark-core-plugin-mixin.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {get, has, isArray, isFunction, merge, union} from 'lodash';\n\n/**\n * Mixes a plugin system into an AmpState object (specifically, into SparkCore)\n * @param {AmpState} State\n * @param {Object} config\n * @param {Object} interceptors\n * @returns {AmpState}\n */\nexport default function mixinSparkCorePlugins(State, config, interceptors) {\n  // eslint-disable-next-line complexity\n  State.registerPlugin = function registerPlugin(name, constructor, options = {}) {\n    if (State.prototype._children[name] && !options.replace) {\n      return;\n    }\n\n    State.prototype._children[name] = constructor;\n\n    if (options.proxies) {\n      options.proxies.forEach((key) => {\n        createDerivedProperty(State.prototype, key, {\n          deps: [`${name}.${key}`],\n          fn() {\n            return this[name][key];\n          }\n        });\n      });\n    }\n\n    if (options.interceptors) {\n      Object.keys(options.interceptors).forEach((key) => {\n        interceptors[key] = options.interceptors[key];\n      });\n    }\n\n    if (options.config) {\n      merge(config, options.config);\n    }\n\n    if (has(options, 'payloadTransformer.predicates')) {\n      config.payloadTransformer.predicates = config.payloadTransformer.predicates.concat(get(options, 'payloadTransformer.predicates'));\n    }\n\n    if (has(options, 'payloadTransformer.transforms')) {\n      config.payloadTransformer.transforms = config.payloadTransformer.transforms.concat(get(options, 'payloadTransformer.transforms'));\n    }\n\n    if (options.onBeforeLogout) {\n      config.onBeforeLogout = config.onBeforeLogout || [];\n      const onBeforeLogout = isArray(options.onBeforeLogout) ? options.onBeforeLogout : [options.onBeforeLogout];\n      onBeforeLogout.forEach((fn) => config.onBeforeLogout.push({\n        plugin: name,\n        fn\n      }));\n    }\n\n\n    if (constructor.prototype._definition.ready) {\n      const {fn, depList} = State.prototype._derived.ready;\n      const def = {\n        deps: depList.concat(`${name}.ready`),\n        fn\n      };\n\n      createDerivedProperty(State.prototype, 'ready', def);\n    }\n  };\n\n  return State;\n}\n\n/**\n * Extracted from ampersand-state\n * @param {Object} modelProto\n * @param {string} name\n * @param {Object} definition\n * @private\n * @returns {undefined}\n */\nfunction createDerivedProperty(modelProto, name, definition) {\n  const def = modelProto._derived[name] = {\n    fn: isFunction(definition) ? definition : definition.fn,\n    cache: definition.cache !== false,\n    depList: definition.deps || []\n  };\n\n    // add to our shared dependency list\n  def.depList.forEach((dep) => {\n    modelProto._deps[dep] = union(modelProto._deps[dep] || [], [name]);\n  });\n\n  // defined a top-level getter for derived names\n  Reflect.defineProperty(modelProto, name, {\n    get() {\n      return this._getDerivedProperty(name);\n    },\n    set() {\n      throw new TypeError(`\\`${name}\\` is a derived property, it can't be set directly.`);\n    }\n  });\n}\n"]}