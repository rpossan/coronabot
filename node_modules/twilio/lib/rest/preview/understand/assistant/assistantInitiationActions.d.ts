/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import Response = require('../../../../http/response');
import Understand = require('../../Understand');
import serialize = require('../../../../base/serialize');
import { SerializableClass } from '../../../../interfaces';

/**
 * @description Initialize the AssistantInitiationActionsList
 * PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
 *
 * @param version - Version of the resource
 * @param assistantSid - The assistant_sid
 */
declare function AssistantInitiationActionsList(version: Understand, assistantSid: string): AssistantInitiationActionsListInstance;

/**
 * Options to pass to update
 *
 * @property initiationActions - The initiation_actions
 */
interface AssistantInitiationActionsInstanceUpdateOptions {
  initiationActions?: string;
}

interface AssistantInitiationActionsListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): AssistantInitiationActionsContext;
  /**
   * Constructs a assistant_initiation_actions
   */
  get(): AssistantInitiationActionsContext;
}

interface AssistantInitiationActionsPayload extends AssistantInitiationActionsResource, Page.TwilioResponsePayload {
}

interface AssistantInitiationActionsResource {
  account_sid: string;
  assistant_sid: string;
  data: string;
  url: string;
}

interface AssistantInitiationActionsSolution {
  assistantSid?: string;
}


declare class AssistantInitiationActionsContext {
  /**
   * Initialize the AssistantInitiationActionsContextPLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param assistantSid - The assistant_sid
   */
  constructor(version: Understand, assistantSid: string);

  /**
   * fetch a AssistantInitiationActionsInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: (error: Error | null, items: AssistantInitiationActionsInstance) => any): Promise<AssistantInitiationActionsInstance>;
  /**
   * update a AssistantInitiationActionsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  update(opts?: AssistantInitiationActionsInstanceUpdateOptions, callback?: (error: Error | null, items: AssistantInitiationActionsInstance) => any): Promise<AssistantInitiationActionsInstance>;
}


declare class AssistantInitiationActionsInstance extends SerializableClass {
  /**
   * Initialize the AssistantInitiationActionsContextPLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @property accountSid - The account_sid
   * @property assistantSid - The assistant_sid
   * @property url - The url
   * @property data - The data
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param assistantSid - The assistant_sid
   */
  constructor(version: Understand, payload: AssistantInitiationActionsPayload, assistantSid: string);

  private _proxy: AssistantInitiationActionsContext;
  accountSid: string;
  assistantSid: string;
  data: string;
  /**
   * fetch a AssistantInitiationActionsInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: (error: Error | null, items: AssistantInitiationActionsInstance) => any): void;
  /**
   * Produce a plain JSON object version of the AssistantInitiationActionsInstance for serialization.
   * Removes any circular references in the object.
   */
  toJSON(): any;
  /**
   * update a AssistantInitiationActionsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  update(opts?: AssistantInitiationActionsInstanceUpdateOptions, callback?: (error: Error | null, items: AssistantInitiationActionsInstance) => any): void;
  url: string;
}


declare class AssistantInitiationActionsPage extends Page<Understand, AssistantInitiationActionsPayload, AssistantInitiationActionsResource, AssistantInitiationActionsInstance> {
  /**
   * Initialize the AssistantInitiationActionsPagePLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you currently do not have developer preview access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Understand, response: Response<string>, solution: AssistantInitiationActionsSolution);

  /**
   * Build an instance of AssistantInitiationActionsInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: AssistantInitiationActionsPayload): AssistantInitiationActionsInstance;
}

export { AssistantInitiationActionsContext, AssistantInitiationActionsInstance, AssistantInitiationActionsList, AssistantInitiationActionsListInstance, AssistantInitiationActionsPage, AssistantInitiationActionsPayload, AssistantInitiationActionsResource, AssistantInitiationActionsSolution }
