{"version":3,"sources":["grant-errors.js"],"names":["OAuthError","res","body","error","enumerable","value","errorDescription","error_description","errorUri","error_uri","Exception","InvalidRequestError","InvalidClientError","InvalidGrantError","UnauthorizedClientError","UnsupportGrantTypeError","InvalidScopeError","errors","invalid_request","invalid_client","invalid_grant","unauthorized_client","unsupported_grant_type","invalid_scope","select","errorString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;;;AAEA;;;IAGaA,U,WAAAA,U;;;;;;;;;;;AACX;;;;0BAIMC,G,EAAK;AACT;AACA,UAAMC,OAAOD,IAAIC,IAAJ,IAAYD,GAAzB;;AAEA,sCAAwB,IAAxB,EAA8B;AAC5BE,eAAO;AACLC,sBAAY,IADP;AAELC,iBAAOH,KAAKC;AAFP,SADqB;AAK5BG,0BAAkB;AAChBF,sBAAY,IADI;AAEhBC,iBAAOH,KAAKK;AAFI,SALU;AAS5BC,kBAAU;AACRJ,sBAAY,IADJ;AAERC,iBAAOH,KAAKO;AAFJ,SATkB;AAa5BR,aAAK;AACHG,sBAAY,KADT;AAEHC,iBAAOJ;AAFJ;AAbuB,OAA9B;;AAmBA,aAAO,KAAKK,gBAAZ;AACD;;;EA7B6BI,iB;AA+BhC;;;AA1CA;;;;AAIA;;IAyCMC,mB;;;;;;;;;EAA4BX,U;;AAElC;;;;;IAGMY,kB;;;;;;;;;EAA2BZ,U;;AAEjC;;;;;IAGMa,iB;;;;;;;;;EAA0Bb,U;;AAEhC;;;;;IAGMc,uB;;;;;;;;;EAAgCd,U;;AAEtC;;;;;IAGMe,uB;;;;;;;;;EAAgCf,U;;AAEtC;;;;;IAGMgB,iB;;;;;;;;;EAA0BhB,U;;AAGhC,IAAMiB,SAAS;AACbjB,wBADa;AAEbW,0CAFa;AAGbC,wCAHa;AAIbC,sCAJa;AAKbC,kDALa;AAMbC,kDANa;AAObC,sCAPa;AAQbE,mBAAiBP,mBARJ;AASbQ,kBAAgBP,kBATH;AAUbQ,iBAAeP,iBAVF;AAWbQ,uBAAqBP,uBAXR;AAYbQ,0BAAwBP,uBAZX;AAabQ,iBAAeP,iBAbF;AAcbQ,QAda,kBAcNC,WAdM,EAcO;AAClB,WAAOR,OAAOQ,WAAP,KAAuBzB,UAA9B;AACD;AAhBY,CAAf;;kBAmBeiB,M","file":"grant-errors.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint camelcase: [0] */\n\nimport {Exception} from '@ciscospark/common';\n\n/**\n * Error thrown during oauth flow\n */\nexport class OAuthError extends Exception {\n  /**\n   * @param {HttpResponse} res\n   * @returns {string}\n   */\n  parse(res) {\n    // This error may be returned in an HTTPResponse or as part of a querystring\n    const body = res.body || res;\n\n    Object.defineProperties(this, {\n      error: {\n        enumerable: true,\n        value: body.error\n      },\n      errorDescription: {\n        enumerable: true,\n        value: body.error_description\n      },\n      errorUri: {\n        enumerable: true,\n        value: body.error_uri\n      },\n      res: {\n        enumerable: false,\n        value: res\n      }\n    });\n\n    return this.errorDescription;\n  }\n}\n/**\n * InvalidRequestError\n */\nclass InvalidRequestError extends OAuthError {}\n\n/**\n * InvalidClientError\n */\nclass InvalidClientError extends OAuthError {}\n\n/**\n * InvalidGrantError\n */\nclass InvalidGrantError extends OAuthError {}\n\n/**\n * UnauthorizedClientError\n */\nclass UnauthorizedClientError extends OAuthError {}\n\n/**\n * UnsupportGrantTypeError\n */\nclass UnsupportGrantTypeError extends OAuthError {}\n\n/**\n * InvalidScopeError\n */\nclass InvalidScopeError extends OAuthError {}\n\n\nconst errors = {\n  OAuthError,\n  InvalidRequestError,\n  InvalidClientError,\n  InvalidGrantError,\n  UnauthorizedClientError,\n  UnsupportGrantTypeError,\n  InvalidScopeError,\n  invalid_request: InvalidRequestError,\n  invalid_client: InvalidClientError,\n  invalid_grant: InvalidGrantError,\n  unauthorized_client: UnauthorizedClientError,\n  unsupported_grant_type: UnsupportGrantTypeError,\n  invalid_scope: InvalidScopeError,\n  select(errorString) {\n    return errors[errorString] || OAuthError;\n  }\n};\n\nexport default errors;\n"]}