{"version":3,"sources":["spark-internal-core.js"],"names":["SparkInternalCore","AmpState","extend","derived","ready","deps","fn","_children","reduce","name","inspect","depth","util","serialize","props","session"],"mappings":";;;;;;;;;;AAIA;;;;AACA;;;;;;AAEA;;;;;AAPA;;;;AAYA,IAAMA,oBAAoBC,yBAASC,MAAT,CAAgB;AACxCC,WAAS;AACPC,WAAO;AACLC,YAAM,EADD;AAELC,QAFK,gBAEA;AAAA;;AACH,eAAO,oBAAY,KAAKC,SAAjB,EAA4BC,MAA5B,CAAmC,UAACJ,KAAD,EAAQK,IAAR;AAAA,iBAAiBL,SAAS,MAAKK,IAAL,CAAT,IAAuB,MAAKA,IAAL,EAAWL,KAAX,KAAqB,KAA7D;AAAA,SAAnC,EAAuG,IAAvG,CAAP;AACD;AAJI;AADA,GAD+B;;AAUxC;;;;;;;AAOAM,SAjBwC,mBAiBhCC,KAjBgC,EAiBzB;AACb,WAAOC,eAAKF,OAAL,CAAa,KAAKG,SAAL,CAAe;AACjCC,aAAO,IAD0B;AAEjCC,eAAS,IAFwB;AAGjCZ,eAAS;AAHwB,KAAf,CAAb,EAIH,EAACQ,YAAD,EAJG,CAAP;AAKD;AAvBuC,CAAhB,CAA1B;;kBA0BeX,iB","file":"spark-internal-core.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport AmpState from 'ampersand-state';\nimport util from 'util';\n\n/**\n * SparkInternalCore is an extra layer of nesting to make it blatantly clear that\n * private plugins are, in fact, private.\n * @class\n */\nconst SparkInternalCore = AmpState.extend({\n  derived: {\n    ready: {\n      deps: [],\n      fn() {\n        return Object.keys(this._children).reduce((ready, name) => ready && this[name] && this[name].ready !== false, true);\n      }\n    }\n  },\n\n  /**\n   * @instance\n   * @memberof SparkPlugin\n   * @param {number} depth\n   * @private\n   * @returns {Object}\n   */\n  inspect(depth) {\n    return util.inspect(this.serialize({\n      props: true,\n      session: true,\n      derived: true\n    }), {depth});\n  }\n});\n\nexport default SparkInternalCore;\n"]}