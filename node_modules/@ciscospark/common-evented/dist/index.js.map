{"version":3,"sources":["index.js"],"names":["evented","data","target","prop","descriptor","defaultValue","initializer","get","value","set","previous","trigger"],"mappings":";;;;;;;;;;;;;;;;;;kBAYwBA,O;;AAZxB;;;;AAEA,IAAMC,OAAO,KAAK,mDAAL,GAAb;;AAEA;;;;;;;;AAQe,SAASD,OAAT,CAAiBE,MAAjB,EAAyBC,IAAzB,EAA+BC,UAA/B,EAA2C;AACxD,MAAMC,eAAeD,WAAWE,WAAX,IAA0BF,WAAWE,WAAX,EAA/C;;AAEA,gCAAuBF,UAAvB,EAAmC,OAAnC;AACA,gCAAuBA,UAAvB,EAAmC,aAAnC;AACA,gCAAuBA,UAAvB,EAAmC,UAAnC;;AAEAA,aAAWG,GAAX,GAAiB,SAASA,GAAT,GAAe;AAC9B,QAAMC,QAAQP,KAAKM,GAAL,CAAS,IAAT,EAAeJ,IAAf,CAAd;;AAEA,QAAI,OAAOK,KAAP,KAAiB,WAArB,EAAkC;AAChC,aAAOA,KAAP;AACD;;AAED,WAAOH,YAAP;AACD,GARD;;AAUAD,aAAWK,GAAX,GAAiB,SAASA,GAAT,CAAaD,KAAb,EAAoB;AACnC,QAAME,WAAW,KAAKP,IAAL,CAAjB;AACA,QAAIO,aAAaF,KAAjB,EAAwB;AACtBP,WAAKQ,GAAL,CAAS,IAAT,EAAeN,IAAf,EAAqBK,KAArB;AACA,WAAKG,OAAL,aAAuBR,IAAvB,EAA+BK,KAA/B,EAAsCE,QAAtC;AACA,WAAKC,OAAL,CAAa,QAAb;AACD;AACF,GAPD;AAQD","file":"index.js","sourcesContent":["import {make} from '@ciscospark/common';\n\nconst data = new (make(WeakMap, Map))();\n\n/**\n * Given a class property, this decorator changes it into a setter/getter pair;\n * the setter will trigger `change:${prop}` when invoked\n * @param {Object} target\n * @param {string} prop\n * @param {Object} descriptor\n * @returns {undefined}\n */\nexport default function evented(target, prop, descriptor) {\n  const defaultValue = descriptor.initializer && descriptor.initializer();\n\n  Reflect.deleteProperty(descriptor, 'value');\n  Reflect.deleteProperty(descriptor, 'initializer');\n  Reflect.deleteProperty(descriptor, 'writable');\n\n  descriptor.get = function get() {\n    const value = data.get(this, prop);\n\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n\n    return defaultValue;\n  };\n\n  descriptor.set = function set(value) {\n    const previous = this[prop];\n    if (previous !== value) {\n      data.set(this, prop, value);\n      this.trigger(`change:${prop}`, value, previous);\n      this.trigger('change');\n    }\n  };\n}\n"]}