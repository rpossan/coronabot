{"version":3,"sources":["features-model.js"],"names":["FeaturesModel","AmpState","extend","collections","developer","FeatureCollection","entitlement","user","clear","options","attributes","forEach","key","unset","_children","_collections","reset","initialize","collectionEventName","collectionName","on","model","trigger"],"mappings":";;;;;;;;;;AAIA;;;;AACA;;;;;;AALA;;;;AAOA,IAAMA,gBAAgBC,yBAASC,MAAT,CAAgB;AACpCC,eAAa;AACXC,eAAWC,2BADA;AAEXC,iBAAaD,2BAFF;AAGXE,UAAMF;AAHK,GADuB;;AAOpC;;;;;AAKAG,OAZoC,iBAY9BC,OAZ8B,EAYrB;AAAA;;AACb,wBAAY,KAAKC,UAAjB,EAA6BC,OAA7B,CAAqC,UAACC,GAAD,EAAS;AAC5C,YAAKC,KAAL,CAAWD,GAAX,EAAgBH,OAAhB;AACD,KAFD;;AAIA,wBAAY,KAAKK,SAAjB,EAA4BH,OAA5B,CAAoC,UAACC,GAAD,EAAS;AAC3C,YAAKA,GAAL,EAAUJ,KAAV;AACD,KAFD;;AAIA,wBAAY,KAAKO,YAAjB,EAA+BJ,OAA/B,CAAuC,UAACC,GAAD,EAAS;AAC9C,YAAKA,GAAL,EAAUI,KAAV;AACD,KAFD;;AAIA,WAAO,IAAP;AACD,GA1BmC;AA4BpCC,YA5BoC,wBA4BvB;AAAA;;AACX;AACA;AACA,KAAC,cAAD,EAAiB,KAAjB,EAAwB,QAAxB,EAAkCN,OAAlC,CAA0C,UAACO,mBAAD,EAAyB;AACjE,OAAC,WAAD,EAAc,aAAd,EAA6B,MAA7B,EAAqCP,OAArC,CAA6C,UAACQ,cAAD,EAAoB;AAC/D,eAAKA,cAAL,EAAqBC,EAArB,CAAwBF,mBAAxB,EAA6C,UAACG,KAAD,EAAQZ,OAAR,EAAoB;AAC/D,iBAAKa,OAAL,aAAuBH,cAAvB,EAAyC,MAAzC,EAA+C,OAAKA,cAAL,CAA/C,EAAqEV,OAArE;AACD,SAFD;AAGD,OAJD;AAKD,KAND;AAOD;AAtCmC,CAAhB,CAAtB;;kBAyCeT,a","file":"features-model.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport AmpState from 'ampersand-state';\nimport FeatureCollection from './feature-collection';\n\nconst FeaturesModel = AmpState.extend({\n  collections: {\n    developer: FeatureCollection,\n    entitlement: FeatureCollection,\n    user: FeatureCollection\n  },\n\n  /**\n   * Recursively clear children/collections;\n   * @param {Object} options\n   * @returns {SparkPlugin}\n   */\n  clear(options) {\n    Object.keys(this.attributes).forEach((key) => {\n      this.unset(key, options);\n    });\n\n    Object.keys(this._children).forEach((key) => {\n      this[key].clear();\n    });\n\n    Object.keys(this._collections).forEach((key) => {\n      this[key].reset();\n    });\n\n    return this;\n  },\n\n  initialize() {\n    /* eslint max-nested-callbacks: [0] */\n    // Propagate change(:[attribute]) events from collections\n    ['change:value', 'add', 'remove'].forEach((collectionEventName) => {\n      ['developer', 'entitlement', 'user'].forEach((collectionName) => {\n        this[collectionName].on(collectionEventName, (model, options) => {\n          this.trigger(`change:${collectionName}`, this, this[collectionName], options);\n        });\n      });\n    });\n  }\n});\n\nexport default FeaturesModel;\n"]}